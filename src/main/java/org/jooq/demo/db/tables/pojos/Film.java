/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.db.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;

import org.jooq.demo.db.enums.MpaaRating;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public record Film(
    Long          filmId,
    String        title,
    String        description,
    Long          releaseYear,
    Long          languageId,
    Long          originalLanguageId,
    Short         rentalDuration,
    BigDecimal    rentalRate,
    Short         length,
    BigDecimal    replacementCost,
    MpaaRating    rating,
    LocalDateTime lastUpdate,
    String[]      specialFeatures
) implements Serializable {

    private static final long serialVersionUID = 1L;


    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Film other = (Film) obj;
        if (this.filmId == null) {
            if (other.filmId != null)
                return false;
        }
        else if (!this.filmId.equals(other.filmId))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.releaseYear == null) {
            if (other.releaseYear != null)
                return false;
        }
        else if (!this.releaseYear.equals(other.releaseYear))
            return false;
        if (this.languageId == null) {
            if (other.languageId != null)
                return false;
        }
        else if (!this.languageId.equals(other.languageId))
            return false;
        if (this.originalLanguageId == null) {
            if (other.originalLanguageId != null)
                return false;
        }
        else if (!this.originalLanguageId.equals(other.originalLanguageId))
            return false;
        if (this.rentalDuration == null) {
            if (other.rentalDuration != null)
                return false;
        }
        else if (!this.rentalDuration.equals(other.rentalDuration))
            return false;
        if (this.rentalRate == null) {
            if (other.rentalRate != null)
                return false;
        }
        else if (!this.rentalRate.equals(other.rentalRate))
            return false;
        if (this.length == null) {
            if (other.length != null)
                return false;
        }
        else if (!this.length.equals(other.length))
            return false;
        if (this.replacementCost == null) {
            if (other.replacementCost != null)
                return false;
        }
        else if (!this.replacementCost.equals(other.replacementCost))
            return false;
        if (this.rating == null) {
            if (other.rating != null)
                return false;
        }
        else if (!this.rating.equals(other.rating))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        if (this.specialFeatures == null) {
            if (other.specialFeatures != null)
                return false;
        }
        else if (!Arrays.equals(this.specialFeatures, other.specialFeatures))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.filmId == null) ? 0 : this.filmId.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.releaseYear == null) ? 0 : this.releaseYear.hashCode());
        result = prime * result + ((this.languageId == null) ? 0 : this.languageId.hashCode());
        result = prime * result + ((this.originalLanguageId == null) ? 0 : this.originalLanguageId.hashCode());
        result = prime * result + ((this.rentalDuration == null) ? 0 : this.rentalDuration.hashCode());
        result = prime * result + ((this.rentalRate == null) ? 0 : this.rentalRate.hashCode());
        result = prime * result + ((this.length == null) ? 0 : this.length.hashCode());
        result = prime * result + ((this.replacementCost == null) ? 0 : this.replacementCost.hashCode());
        result = prime * result + ((this.rating == null) ? 0 : this.rating.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        result = prime * result + ((this.specialFeatures == null) ? 0 : Arrays.hashCode(this.specialFeatures));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Film (");

        sb.append(filmId);
        sb.append(", ").append(title);
        sb.append(", ").append(description);
        sb.append(", ").append(releaseYear);
        sb.append(", ").append(languageId);
        sb.append(", ").append(originalLanguageId);
        sb.append(", ").append(rentalDuration);
        sb.append(", ").append(rentalRate);
        sb.append(", ").append(length);
        sb.append(", ").append(replacementCost);
        sb.append(", ").append(rating);
        sb.append(", ").append(lastUpdate);
        sb.append(", ").append(Arrays.toString(specialFeatures));

        sb.append(")");
        return sb.toString();
    }
}
