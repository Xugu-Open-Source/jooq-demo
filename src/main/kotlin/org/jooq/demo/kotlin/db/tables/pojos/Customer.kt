/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.kotlin.db.tables.pojos


import java.io.Serializable
import java.time.LocalDate
import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Customer(
    val customerId: Long? = null,
    val storeId: Long? = null,
    val firstName: String? = null,
    val lastName: String? = null,
    val email: String? = null,
    val addressId: Long? = null,
    val activebool: Boolean? = null,
    val createDate: LocalDate? = null,
    val lastUpdate: LocalDateTime? = null,
    val active: Long? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other === null)
            return false
        if (this::class != other::class)
            return false
        val o: Customer = other as Customer
        if (this.customerId === null) {
            if (o.customerId !== null)
                return false
        }
        else if (this.customerId != o.customerId)
            return false
        if (this.storeId === null) {
            if (o.storeId !== null)
                return false
        }
        else if (this.storeId != o.storeId)
            return false
        if (this.firstName === null) {
            if (o.firstName !== null)
                return false
        }
        else if (this.firstName != o.firstName)
            return false
        if (this.lastName === null) {
            if (o.lastName !== null)
                return false
        }
        else if (this.lastName != o.lastName)
            return false
        if (this.email === null) {
            if (o.email !== null)
                return false
        }
        else if (this.email != o.email)
            return false
        if (this.addressId === null) {
            if (o.addressId !== null)
                return false
        }
        else if (this.addressId != o.addressId)
            return false
        if (this.activebool === null) {
            if (o.activebool !== null)
                return false
        }
        else if (this.activebool != o.activebool)
            return false
        if (this.createDate === null) {
            if (o.createDate !== null)
                return false
        }
        else if (this.createDate != o.createDate)
            return false
        if (this.lastUpdate === null) {
            if (o.lastUpdate !== null)
                return false
        }
        else if (this.lastUpdate != o.lastUpdate)
            return false
        if (this.active === null) {
            if (o.active !== null)
                return false
        }
        else if (this.active != o.active)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.customerId === null) 0 else this.customerId.hashCode())
        result = prime * result + (if (this.storeId === null) 0 else this.storeId.hashCode())
        result = prime * result + (if (this.firstName === null) 0 else this.firstName.hashCode())
        result = prime * result + (if (this.lastName === null) 0 else this.lastName.hashCode())
        result = prime * result + (if (this.email === null) 0 else this.email.hashCode())
        result = prime * result + (if (this.addressId === null) 0 else this.addressId.hashCode())
        result = prime * result + (if (this.activebool === null) 0 else this.activebool.hashCode())
        result = prime * result + (if (this.createDate === null) 0 else this.createDate.hashCode())
        result = prime * result + (if (this.lastUpdate === null) 0 else this.lastUpdate.hashCode())
        result = prime * result + (if (this.active === null) 0 else this.active.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Customer (")

        sb.append(customerId)
        sb.append(", ").append(storeId)
        sb.append(", ").append(firstName)
        sb.append(", ").append(lastName)
        sb.append(", ").append(email)
        sb.append(", ").append(addressId)
        sb.append(", ").append(activebool)
        sb.append(", ").append(createDate)
        sb.append(", ").append(lastUpdate)
        sb.append(", ").append(active)

        sb.append(")")
        return sb.toString()
    }
}
