/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.skala.db.tables.daos


import java.lang.Long
import java.lang.String
import java.time.LocalDateTime
import java.util.List

import org.jooq.Configuration
import org.jooq.demo.skala.db.tables.Actor
import org.jooq.demo.skala.db.tables.records.ActorRecord
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
class ActorDao(configuration: Configuration) extends DAOImpl[ActorRecord, org.jooq.demo.skala.db.tables.pojos.Actor, Long](Actor.ACTOR, classOf[org.jooq.demo.skala.db.tables.pojos.Actor], configuration) {

  /**
   * Create a new ActorDao without any configuration
   */
  def this() = this(null)

  override def getId(o: org.jooq.demo.skala.db.tables.pojos.Actor): Long = o.getActorId

  /**
   * Fetch records that have <code>actor_id BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfActorId(lowerInclusive: Long, upperInclusive: Long): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetchRange(Actor.ACTOR.ACTOR_ID, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>actor_id IN (values)</code>
   */
  def fetchByActorId(values: Long*): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetch(Actor.ACTOR.ACTOR_ID, values:_*)

  /**
   * Fetch a unique record that has <code>actor_id = value</code>
   */
  def fetchOneByActorId(value: Long): org.jooq.demo.skala.db.tables.pojos.Actor = fetchOne(Actor.ACTOR.ACTOR_ID, value)

  /**
   * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfFirstName(lowerInclusive: String, upperInclusive: String): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetchRange(Actor.ACTOR.FIRST_NAME, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>first_name IN (values)</code>
   */
  def fetchByFirstName(values: String*): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetch(Actor.ACTOR.FIRST_NAME, values:_*)

  /**
   * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfLastName(lowerInclusive: String, upperInclusive: String): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetchRange(Actor.ACTOR.LAST_NAME, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>last_name IN (values)</code>
   */
  def fetchByLastName(values: String*): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetch(Actor.ACTOR.LAST_NAME, values:_*)

  /**
   * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfLastUpdate(lowerInclusive: LocalDateTime, upperInclusive: LocalDateTime): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetchRange(Actor.ACTOR.LAST_UPDATE, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>last_update IN (values)</code>
   */
  def fetchByLastUpdate(values: LocalDateTime*): List[org.jooq.demo.skala.db.tables.pojos.Actor] = fetch(Actor.ACTOR.LAST_UPDATE, values:_*)
}
