/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.skala.db.tables.records


import java.lang.Long
import java.lang.String

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.demo.skala.db.tables.ActorInfo
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
class ActorInfoRecord extends TableRecordImpl[ActorInfoRecord](ActorInfo.ACTOR_INFO) with Record4[Long, String, String, String] {

  /**
   * Setter for <code>public.actor_info.actor_id</code>.
   */
  def setActorId(value: Long): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.actor_info.actor_id</code>.
   */
  def getActorId: Long = get(0).asInstanceOf[Long]

  /**
   * Setter for <code>public.actor_info.first_name</code>.
   */
  def setFirstName(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.actor_info.first_name</code>.
   */
  def getFirstName: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>public.actor_info.last_name</code>.
   */
  def setLastName(value: String): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.actor_info.last_name</code>.
   */
  def getLastName: String = get(2).asInstanceOf[String]

  /**
   * Setter for <code>public.actor_info.film_info</code>.
   */
  def setFilmInfo(value: String): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.actor_info.film_info</code>.
   */
  def getFilmInfo: String = get(3).asInstanceOf[String]

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow: Row4[Long, String, String, String] = super.fieldsRow.asInstanceOf[ Row4[Long, String, String, String] ]

  override def valuesRow: Row4[Long, String, String, String] = super.valuesRow.asInstanceOf[ Row4[Long, String, String, String] ]
  override def field1: Field[Long] = ActorInfo.ACTOR_INFO.ACTOR_ID
  override def field2: Field[String] = ActorInfo.ACTOR_INFO.FIRST_NAME
  override def field3: Field[String] = ActorInfo.ACTOR_INFO.LAST_NAME
  override def field4: Field[String] = ActorInfo.ACTOR_INFO.FILM_INFO
  override def component1: Long = getActorId
  override def component2: String = getFirstName
  override def component3: String = getLastName
  override def component4: String = getFilmInfo
  override def value1: Long = getActorId
  override def value2: String = getFirstName
  override def value3: String = getLastName
  override def value4: String = getFilmInfo

  override def value1(value: Long): ActorInfoRecord = {
    setActorId(value)
    this
  }

  override def value2(value: String): ActorInfoRecord = {
    setFirstName(value)
    this
  }

  override def value3(value: String): ActorInfoRecord = {
    setLastName(value)
    this
  }

  override def value4(value: String): ActorInfoRecord = {
    setFilmInfo(value)
    this
  }

  override def values(value1 : Long, value2 : String, value3 : String, value4 : String): ActorInfoRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this
  }

  /**
   * Create a detached, initialised ActorInfoRecord
   */
  def this(actorId : Long, firstName : String, lastName : String, filmInfo : String) = {
    this()

    this.setActorId(actorId)
    this.setFirstName(firstName)
    this.setLastName(lastName)
    this.setFilmInfo(filmInfo)
  }

  /**
   * Create a detached, initialised ActorInfoRecord
   */
  def this(value: org.jooq.demo.skala.db.tables.pojos.ActorInfo) = {
    this()

    if (value != null) {
      this.setActorId(value.getActorId)
      this.setFirstName(value.getFirstName)
      this.setLastName(value.getLastName)
      this.setFilmInfo(value.getFilmInfo)
    }
  }
}
