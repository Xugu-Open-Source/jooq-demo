/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.skala.db.tables.records


import java.lang.Long
import java.lang.String

import org.jooq.Field
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.demo.skala.db.tables.StaffList
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
class StaffListRecord extends TableRecordImpl[StaffListRecord](StaffList.STAFF_LIST) with Record8[Long, String, String, String, String, String, String, Long] {

  /**
   * Setter for <code>public.staff_list.id</code>.
   */
  def setId(value: Long): Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>public.staff_list.id</code>.
   */
  def getId: Long = get(0).asInstanceOf[Long]

  /**
   * Setter for <code>public.staff_list.name</code>.
   */
  def setName(value: String): Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>public.staff_list.name</code>.
   */
  def getName: String = get(1).asInstanceOf[String]

  /**
   * Setter for <code>public.staff_list.address</code>.
   */
  def setAddress(value: String): Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>public.staff_list.address</code>.
   */
  def getAddress: String = get(2).asInstanceOf[String]

  /**
   * Setter for <code>public.staff_list.zip code</code>.
   */
  def setZipCode(value: String): Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>public.staff_list.zip code</code>.
   */
  def getZipCode: String = get(3).asInstanceOf[String]

  /**
   * Setter for <code>public.staff_list.phone</code>.
   */
  def setPhone(value: String): Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>public.staff_list.phone</code>.
   */
  def getPhone: String = get(4).asInstanceOf[String]

  /**
   * Setter for <code>public.staff_list.city</code>.
   */
  def setCity(value: String): Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>public.staff_list.city</code>.
   */
  def getCity: String = get(5).asInstanceOf[String]

  /**
   * Setter for <code>public.staff_list.country</code>.
   */
  def setCountry(value: String): Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>public.staff_list.country</code>.
   */
  def getCountry: String = get(6).asInstanceOf[String]

  /**
   * Setter for <code>public.staff_list.sid</code>.
   */
  def setSid(value: Long): Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>public.staff_list.sid</code>.
   */
  def getSid: Long = get(7).asInstanceOf[Long]

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow: Row8[Long, String, String, String, String, String, String, Long] = super.fieldsRow.asInstanceOf[ Row8[Long, String, String, String, String, String, String, Long] ]

  override def valuesRow: Row8[Long, String, String, String, String, String, String, Long] = super.valuesRow.asInstanceOf[ Row8[Long, String, String, String, String, String, String, Long] ]
  override def field1: Field[Long] = StaffList.STAFF_LIST.ID
  override def field2: Field[String] = StaffList.STAFF_LIST.NAME
  override def field3: Field[String] = StaffList.STAFF_LIST.ADDRESS
  override def field4: Field[String] = StaffList.STAFF_LIST.ZIP_CODE
  override def field5: Field[String] = StaffList.STAFF_LIST.PHONE
  override def field6: Field[String] = StaffList.STAFF_LIST.CITY
  override def field7: Field[String] = StaffList.STAFF_LIST.COUNTRY
  override def field8: Field[Long] = StaffList.STAFF_LIST.SID
  override def component1: Long = getId
  override def component2: String = getName
  override def component3: String = getAddress
  override def component4: String = getZipCode
  override def component5: String = getPhone
  override def component6: String = getCity
  override def component7: String = getCountry
  override def component8: Long = getSid
  override def value1: Long = getId
  override def value2: String = getName
  override def value3: String = getAddress
  override def value4: String = getZipCode
  override def value5: String = getPhone
  override def value6: String = getCity
  override def value7: String = getCountry
  override def value8: Long = getSid

  override def value1(value: Long): StaffListRecord = {
    setId(value)
    this
  }

  override def value2(value: String): StaffListRecord = {
    setName(value)
    this
  }

  override def value3(value: String): StaffListRecord = {
    setAddress(value)
    this
  }

  override def value4(value: String): StaffListRecord = {
    setZipCode(value)
    this
  }

  override def value5(value: String): StaffListRecord = {
    setPhone(value)
    this
  }

  override def value6(value: String): StaffListRecord = {
    setCity(value)
    this
  }

  override def value7(value: String): StaffListRecord = {
    setCountry(value)
    this
  }

  override def value8(value: Long): StaffListRecord = {
    setSid(value)
    this
  }

  override def values(value1 : Long, value2 : String, value3 : String, value4 : String, value5 : String, value6 : String, value7 : String, value8 : Long): StaffListRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this
  }

  /**
   * Create a detached, initialised StaffListRecord
   */
  def this(id : Long, name : String, address : String, zipCode : String, phone : String, city : String, country : String, sid : Long) = {
    this()

    this.setId(id)
    this.setName(name)
    this.setAddress(address)
    this.setZipCode(zipCode)
    this.setPhone(phone)
    this.setCity(city)
    this.setCountry(country)
    this.setSid(sid)
    resetChangedOnNotNull()
  }

  /**
   * Create a detached, initialised StaffListRecord
   */
  def this(value: org.jooq.demo.skala.db.tables.pojos.StaffList) = {
    this()

    if (value != null) {
      this.setId(value.getId)
      this.setName(value.getName)
      this.setAddress(value.getAddress)
      this.setZipCode(value.getZipCode)
      this.setPhone(value.getPhone)
      this.setCity(value.getCity)
      this.setCountry(value.getCountry)
      this.setSid(value.getSid)
      resetChangedOnNotNull()
    }
  }
}
