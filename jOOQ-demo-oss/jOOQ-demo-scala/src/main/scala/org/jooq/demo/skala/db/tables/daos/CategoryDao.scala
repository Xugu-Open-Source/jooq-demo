/*
 * This file is generated by jOOQ.
 */
package org.jooq.demo.skala.db.tables.daos


import java.lang.Long
import java.lang.String
import java.time.LocalDateTime
import java.util.List

import org.jooq.Configuration
import org.jooq.demo.skala.db.tables.Category
import org.jooq.demo.skala.db.tables.records.CategoryRecord
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
class CategoryDao(configuration: Configuration) extends DAOImpl[CategoryRecord, org.jooq.demo.skala.db.tables.pojos.Category, Long](Category.CATEGORY, classOf[org.jooq.demo.skala.db.tables.pojos.Category], configuration) {

  /**
   * Create a new CategoryDao without any configuration
   */
  def this() = this(null)

  override def getId(o: org.jooq.demo.skala.db.tables.pojos.Category): Long = o.getCategoryId

  /**
   * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfCategoryId(lowerInclusive: Long, upperInclusive: Long): List[org.jooq.demo.skala.db.tables.pojos.Category] = fetchRange(Category.CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>category_id IN (values)</code>
   */
  def fetchByCategoryId(values: Long*): List[org.jooq.demo.skala.db.tables.pojos.Category] = fetch(Category.CATEGORY.CATEGORY_ID, values:_*)

  /**
   * Fetch a unique record that has <code>category_id = value</code>
   */
  def fetchOneByCategoryId(value: Long): org.jooq.demo.skala.db.tables.pojos.Category = fetchOne(Category.CATEGORY.CATEGORY_ID, value)

  /**
   * Fetch records that have <code>name BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfName(lowerInclusive: String, upperInclusive: String): List[org.jooq.demo.skala.db.tables.pojos.Category] = fetchRange(Category.CATEGORY.NAME, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>name IN (values)</code>
   */
  def fetchByName(values: String*): List[org.jooq.demo.skala.db.tables.pojos.Category] = fetch(Category.CATEGORY.NAME, values:_*)

  /**
   * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
   * upperInclusive</code>
   */
  def fetchRangeOfLastUpdate(lowerInclusive: LocalDateTime, upperInclusive: LocalDateTime): List[org.jooq.demo.skala.db.tables.pojos.Category] = fetchRange(Category.CATEGORY.LAST_UPDATE, lowerInclusive, upperInclusive)

  /**
   * Fetch records that have <code>last_update IN (values)</code>
   */
  def fetchByLastUpdate(values: LocalDateTime*): List[org.jooq.demo.skala.db.tables.pojos.Category] = fetch(Category.CATEGORY.LAST_UPDATE, values:_*)
}
